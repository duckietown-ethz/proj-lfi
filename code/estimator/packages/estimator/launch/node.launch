<launch>
	<arg name="param_file_name" default="default" doc="Specify a param file." />

	<group ns="$(arg veh)">
		<node pkg="estimator" type="preprocessor_node.py" name="preprocessor_node" output="screen">
			<rosparam command="load" file="$(find estimator)/config/preprocessor_node/$(arg param_file_name).yaml"/>

			<remap from="preprocessor_node/image_in/compressed" to="camera_node/image/compressed"/>
			<remap from="preprocessor_node/camera_info" to="camera_node/camera_info"/>
		</node>

		<node pkg="estimator" type="birdseye_node.py" name="birdseye_node" output="screen">
			<rosparam command="load" file="$(find estimator)/config/birdseye_node/$(arg param_file_name).yaml"/>

			<remap from="birdseye_node/image_in/compressed" to="preprocessor_node/image_out/compressed"/>
		</node>

		<node pkg="estimator" type="localization_node.py" name="localization_node" output="screen">
			<rosparam command="load" file="$(find estimator)/config/localization_node/$(arg param_file_name).yaml"/>

			<remap from="localization_node/image_in/compressed" to="birdseye_node/image_out/compressed"/>
			<remap from="localization_node/camera_info" to="camera_node/camera_info"/>
			<remap from="localization_node/open_loop_pose_estimate" to="velocity_to_pose_node/pose"/>
			<!-- Reset state if the image stream loops -->
			<remap from="localization_node/reset" to="camera_node/loop"/>
		</node>

		<!--
		<node pkg="estimator" type="estimator_node.py" name="estimator_node" output="screen">
			<remap from="estimator_node/linesegments_ground" to="ground_projection/lineseglist_out"/>
			<remap from="estimator_node/rectified_image" to="camera_node/image/rect/compressed"/>
			<remap from="estimator_node/rectified_image" to="camera_node/image/compressed"/>
			<remap from="estimator_node/rectified_image" to="anti_instagram_node/corrected_image/compressed"/>

			<remap from="estimator_node/rectified_image" to="preprocessor_node/image_out/compressed"/>
		</node>
		-->
	</group>
</launch>
