<launch>
	<arg name="param_file_name" default="default" doc="Specify a param file." />

	<group ns="$(arg veh)">
		<node pkg="tf" type="static_transform_publisher" name="tf_vehicle_cam"
        args="0.06 0.0 0.085
			0.54952518 -0.54952518 0.44499672 -0.44499672
            axle camera 100" />

		<node pkg="estimator" type="preprocessor_node.py" name="preprocessor_node" output="screen">
			<rosparam command="load" file="$(find estimator)/config/preprocessor_node/$(arg param_file_name).yaml"/>

			<remap from="preprocessor_node/image_in/compressed" to="camera_node/image/compressed"/>
			<remap from="preprocessor_node/camera_info" to="camera_node/camera_info"/>
		</node>

		<node pkg="estimator" type="birdseye_node.py" name="birdseye_node" output="screen">
			<rosparam command="load" file="$(find estimator)/config/birdseye_node/$(arg param_file_name).yaml"/>

			<remap from="birdseye_node/image_in/compressed" to="preprocessor_node/image_out/compressed"/>
		</node>

		<node pkg="estimator" type="localization_node.py" name="localization_node" output="screen">
			<rosparam command="load" file="$(find estimator)/config/localization_node/$(arg param_file_name).yaml"/>

			<remap from="localization_node/image_in/compressed" to="birdseye_node/image_out/compressed"/>
			<remap from="localization_node/camera_info" to="camera_node/camera_info"/>
			<!-- Reset state if the image stream loops -->
			<remap from="localization_node/reset" to="camera_node/loop"/>
		</node>

		<node pkg="estimator" name="virtual_lane_node" type="virtual_lane_node.py" output="screen">
			<rosparam command="load" file="$(find estimator)/config/virtual_lane_node/go_straight.yaml"/>

			<remap from="virtual_lane_node/intersection_pose" to="localization_node/best_pose_estimate"/>
		</node>

	</group>

	<!-- Lane controller -->
	<remap from="lane_controller_node/intersection_navigation_pose" to="virtual_lane_node/lane_pose"/>
	<remap from="lane_controller_node/lane_pose" to="lane_filter_node/lane_pose"/>
	<remap from="lane_controller_node/wheels_cmd_executed" to="wheels_driver_node/wheels_cmd_executed" />
	<remap from="lane_controller_node/fsm_mode" to="fsm_node/mode" />
	<remap from="lane_controller_node/obstacle_avoidance_pose" to="obst_avoid/obstacle_avoidance_pose" />
	<remap from="lane_controller_node/obstacle_detected" to="obstacle_avoidance_node/obstacle_avoidance_active_flag" />
	<remap from="lane_controller_node/stop_line_reading" to="stop_line_filter_node/stop_line_reading" />
	<remap from="wheels_driver_node/radius_limit" to="lane_controller_node/radius_limit" />

	<include file="$(find lane_control)/launch/lane_controller_node.launch">
		<arg name="veh" value="$(arg veh)"/>
		<arg name="param_file_name" value="default"/>
	</include>

</launch>
